package com.mastering.spring.springboot.bean.vo;

import com.mastering.spring.springboot.bean.exception.EnumTypeError;

public enum ItemType {
    Requirement("需求相关要求"),
    RequirementReaction("需求相关反应"),
    Behavior("注意行为"),
    FollowDirections("听指令"),
    Acceptability("接受性"),
    AnswerNeed("回答要/不要问题"),
    AnswerYes("回答是/否"),
    AnswerWh("回答wh问题"),
    AnswerCan("回答能/不能或是会不会问题"),
    AnswerGuess("回答假设性的因应问题"),
    Response("接续他人句子"),
    Recall("回溯"),
    ActiveExpression("主动表达需求"),
    AskQuestion("wh的主动提问"),
    AskHypotheticalResponseQuestions("提问假设性的因应问题"),
    PresentationComparison("陈述比较"),
    StateWishesAndImagination("陈述愿望及想象"),
    Voice("语音"),
    Intonation("语调"),
    SentenceLength("句子长度"),
    ComplexSentence("复杂句"),
    UseOfWords("语词使用"),
    BasicConversation("基本对谈"),
    ThematicConversation("主题式对谈"),
    BodyAndConversation("肢体与对谈"),
    AdvancedConversation("进阶对谈"),
    FixationBehavior("注视行为"),
    Close("亲近"),
    Interaction("互动(非语言)"),
    Imitate("模仿"),
    EmotionalPerformance("情绪表现"),
    Share("分享"),
    EmotionalNaming("情绪命名"),
    DesirebasedEmotionalNaming("以欲望为主的情绪命名/因果"),
    EmotionalDiscrimination("情绪分辨"),
    EmotionalManagement("情绪管理"),
    Pregame("前游戏"),
    BodyGames("肢体游戏"),
    FunctionGame("功能游戏"),
    PretendPlay("假装游戏"),
    ConstructiveGame("建构式游戏"),
    SymbolicGame("象征游戏"),
    DramaticGames("戏剧式游戏"),
    RulebasedGame("依规则的游戏"),
    GameAndLanguage("游戏及语言"),
    Sportsmanship("运动家精神"),
    BasicIntention("基本意图"),
    BasicBeliefs("基本信念"),
    FirstRankingBelief("第一顺位信念"),
    FalseBelief("错误信念"),
    PoliteBehavior("礼貌行为"),
    PeerInteraction("同侪互动"),
    PositiveExpression("正向表达"),
    TelephoneUse("电话使用"),
    TakeCareOfTheEnvironment("照顾环境"),
    Preparation("准备工作"),
    StrictlyAbideByTheConceptOfTime("严守时间观念"),
    BorrowingAndReturn("借用和归还"),
    DeliverMessages("传递讯息"),
    HandlingInTheFaceOfAttack("面对攻击行为处理"),
    EmergencyTreatment("紧急状况的处理"),
    InterpersonalConflictResolution("人际冲突解决"),
    SensoryAction("感觉动作"),
    BasicSpaceConcept("基本空间概念"),
    Perception("知觉"),
    AdvancedPerception("进阶知觉"),
    Classification("分类"),
    Type("型态"),
    Sort("排序"),
    NamingOfCharacters("人物的命名"),
    ItemNaming("物品命名"),
    PlaceNaming("地点命名"),
    SymbolNaming("符号命名"),
    SemanticNaming("语意命名"),
    Count("数数"),
    NamedNumbers("命名数字"),
    Calculation("计算"),
    Time("时间"),
    Coin("钱币"),
    ComparisonAndComparison("比较和对照"),
    PrintAwareness("印刷品觉察"),
    ListeningAbility("倾听能力"),
    PhonologicalAwareness("声韵觉识"),
    PrintIdentification("印刷品辨识"),
    Write("书写"),
    ForecastThePlot("预测剧情"),
    MemoryStory("记忆故事"),
    AnswerWhQuestion("回答wh问句"),
    SequenceOfEvents("事件顺序"),
    WriteASummary("写下摘要"),
    Association("联想"),
    CausalRelationship("因果关系"),
    Analogy("类比"),
    MindReading("心智解读"),
    Synopsis("剧情推论"),
    Chew("咀嚼"),
    DrinkingSkills("喝的技能"),
    UseTableware("使用餐具"),
    DiningBehavior("用餐行为"),
    PutOnAndTakeOffClothes("穿脱衣物"),
    Zipper("拉拉链"),
    WearAndTakeOffShoesAndSocks("穿脱鞋袜"),
    DressAppropriately("穿着适切"),
    WashHands("洗手"),
    Manicure("修剪指甲"),
    WashOnesFace("洗脸"),
    BrushOnesTeeth("刷牙"),
    CleanNose("清洁鼻子"),
    FinishingHair("整理头发"),
    ExpressNeeds("表达需求"),
    ExcretionControl("排泄控制"),
    UseToilet("使用厕所"),
    OrganizeTheEnvironment("整理环境"),
    Housekeeping("整理家务"),
    UseTools("使用工具"),
    SimpleFoodPreparation("简单食物准备"),
    CookFood("煮食食物"),
    TimeManagement("时间管理"),
    Selfcontrol("自我管控"),
    FinancialManagement("财务管理"),
    Walk("行走"),
    RideTraffic("骑乘交通"),
    CommunityUse("社区使用"),
    EatingOut("外出用餐"),
    leisureActivities("休闲活动"),
    MedicalTreatment("就医"),
    Motion("运动"),
    TurnOver("翻"),
    Sit("坐"),
    Climb("爬"),
    Run("跑"),
    Squat("蹲"),
    Jump("跳"),
    Push("推"),
    Ride("骑"),
    Kick("踢"),
    Balance("平衡"),
    Swing("荡"),
    HandConnection("手部投接"),
    Dribble("运球"),
    Knock("敲打"),
    Extrusion("挤压"),
    Turn("转动"),
    Roll("滚动"),
    Place("放置"),
    Insert("插"),
    Strand("串"),
    Pull("拉"),
    Grab("抓"),
    Hold("握"),
    Cut("剪"),
    Fracture("折"),
    Sticking("贴黏"),
    AskCan("主动提问能/不能或是会不会的问题");

    private String name;

    ItemType(String name){
        this.name=name;
    }

    public ItemType getItemType(String name) throws EnumTypeError {
        switch (name){
            case "Requirement":
                return ItemType.valueOf(name);
            default:
                throw new EnumTypeError("大项类型错误");
        }
    }
}
